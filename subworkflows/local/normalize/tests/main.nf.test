nextflow_workflow {

    name "Test Subworkflow NORMALIZE"
    script "../main.nf"
    workflow "NORMALIZE"

    test("test profile") {
        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        file(params.pipelines_testdata_base_path + 'nanostring/RCC_files/salmon_01_01.RCC', checkIfExists: true),
                        file(params.pipelines_testdata_base_path + 'nanostring/RCC_files/salmon_02_02.RCC', checkIfExists: true),
                        file(params.pipelines_testdata_base_path + 'nanostring/RCC_files/salmon_03_03.RCC', checkIfExists: true),
                        file(params.pipelines_testdata_base_path + 'nanostring/RCC_files/salmon_04_04.RCC', checkIfExists: true)
                    ]
                )
                input[1] = file(params.pipelines_testdata_base_path + 'nanostring/samplesheets/samplesheet_test.csv', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // workflow.out.nacho_qc_multiqc_metrics[0].collect { file(it).name }, //undeterministic .png and .txt mqc files
                    workflow.out.normalized_counts,
                    workflow.out.normalized_counts_wo_HK,
                    workflow.out.versions
                    ).match()
                }
            )
        }
    }
}
